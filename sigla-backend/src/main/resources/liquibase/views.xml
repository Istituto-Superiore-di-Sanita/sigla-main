<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_esercizi">
        <createView fullDefinition="false" viewName="v_esercizi"> SELECT esercizio_base.esercizio
            FROM esercizio_base;</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_cdr_valido">
        <createView fullDefinition="false" viewName="v_cdr_valido"> SELECT b.esercizio,
            a.esercizio_inizio,
            a.cd_centro_responsabilita,
            a.cd_unita_organizzativa,
            a.livello,
            a.cd_proprio_cdr,
            a.ds_cdr,
            a.cd_cdr_afferenza,
            a.cd_responsabile,
            a.indirizzo,
            a.esercizio_fine,
            a.dacr,
            a.utcr,
            a.duva,
            a.utuv,
            a.pg_ver_rec
            FROM cdr a,
            v_esercizi b
            WHERE ((b.esercizio &gt;= a.esercizio_inizio) AND (b.esercizio &lt;= a.esercizio_fine));</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_unita_organizzativa_valida">
        <createView fullDefinition="false" viewName="v_unita_organizzativa_valida"> SELECT b.esercizio,
            a.esercizio_inizio,
            a.cd_unita_organizzativa,
            a.cd_proprio_unita,
            a.cd_tipo_unita,
            a.fl_cds,
            a.fl_uo_cds,
            a.fl_rubrica,
            a.cd_unita_padre,
            a.livello,
            a.ds_unita_organizzativa,
            a.prc_copertura_obblig_2,
            a.prc_copertura_obblig_3,
            a.cd_area_ricerca,
            a.fl_presidente_area,
            a.cd_responsabile,
            a.cd_responsabile_amm,
            a.esercizio_fine,
            a.cd_area_scientifica,
            a.id_funzione_pubblica,
            a.dacr,
            a.utcr,
            a.duva,
            a.utuv,
            a.pg_ver_rec
            FROM unita_organizzativa a,
            v_esercizi b
            WHERE ((b.esercizio &gt;= a.esercizio_inizio) AND (b.esercizio &lt;= a.esercizio_fine));</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_unita_organizzativa">
        <createView fullDefinition="false" viewName="v_unita_organizzativa"> SELECT uo_cds.cd_unita_organizzativa AS cd_uo,
            unita_organizzativa.esercizio,
            unita_organizzativa.esercizio_inizio,
            unita_organizzativa.cd_unita_organizzativa,
            unita_organizzativa.cd_proprio_unita,
            unita_organizzativa.cd_tipo_unita,
            unita_organizzativa.fl_cds,
            unita_organizzativa.fl_uo_cds,
            unita_organizzativa.fl_rubrica,
            unita_organizzativa.cd_unita_padre,
            unita_organizzativa.livello,
            unita_organizzativa.ds_unita_organizzativa,
            unita_organizzativa.prc_copertura_obblig_2,
            unita_organizzativa.prc_copertura_obblig_3,
            unita_organizzativa.dacr,
            unita_organizzativa.cd_area_ricerca,
            unita_organizzativa.fl_presidente_area,
            unita_organizzativa.cd_responsabile,
            unita_organizzativa.utcr,
            unita_organizzativa.duva,
            unita_organizzativa.cd_responsabile_amm,
            unita_organizzativa.utuv,
            unita_organizzativa.pg_ver_rec,
            unita_organizzativa.esercizio_fine,
            unita_organizzativa.cd_area_scientifica,
            unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa_valida unita_organizzativa,
            v_unita_organizzativa_valida uo_cds
            WHERE ((uo_cds.fl_uo_cds = 'Y'::bpchar) AND ((uo_cds.cd_tipo_unita)::text &lt;&gt; 'SAC'::text) AND ((unita_organizzativa.cd_unita_padre)::text = (uo_cds.cd_unita_padre)::text) AND (uo_cds.esercizio = unita_organizzativa.esercizio))
            UNION ALL
            SELECT unita_organizzativa.cd_unita_organizzativa AS cd_uo,
            unita_organizzativa.esercizio,
            unita_organizzativa.esercizio_inizio,
            unita_organizzativa.cd_unita_organizzativa,
            unita_organizzativa.cd_proprio_unita,
            unita_organizzativa.cd_tipo_unita,
            unita_organizzativa.fl_cds,
            unita_organizzativa.fl_uo_cds,
            unita_organizzativa.fl_rubrica,
            unita_organizzativa.cd_unita_padre,
            unita_organizzativa.livello,
            unita_organizzativa.ds_unita_organizzativa,
            unita_organizzativa.prc_copertura_obblig_2,
            unita_organizzativa.prc_copertura_obblig_3,
            unita_organizzativa.dacr,
            unita_organizzativa.cd_area_ricerca,
            unita_organizzativa.fl_presidente_area,
            unita_organizzativa.cd_responsabile,
            unita_organizzativa.utcr,
            unita_organizzativa.duva,
            unita_organizzativa.cd_responsabile_amm,
            unita_organizzativa.utuv,
            unita_organizzativa.pg_ver_rec,
            unita_organizzativa.esercizio_fine,
            unita_organizzativa.cd_area_scientifica,
            unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa_valida unita_organizzativa
            WHERE ((unita_organizzativa.fl_uo_cds = 'N'::bpchar) AND ((unita_organizzativa.cd_tipo_unita)::text &lt;&gt; 'SAC'::text))
            UNION ALL
            SELECT uo_rubrica.cd_unita_organizzativa AS cd_uo,
            unita_organizzativa.esercizio,
            unita_organizzativa.esercizio_inizio,
            unita_organizzativa.cd_unita_organizzativa,
            unita_organizzativa.cd_proprio_unita,
            unita_organizzativa.cd_tipo_unita,
            unita_organizzativa.fl_cds,
            unita_organizzativa.fl_uo_cds,
            unita_organizzativa.fl_rubrica,
            unita_organizzativa.cd_unita_padre,
            unita_organizzativa.livello,
            unita_organizzativa.ds_unita_organizzativa,
            unita_organizzativa.prc_copertura_obblig_2,
            unita_organizzativa.prc_copertura_obblig_3,
            unita_organizzativa.dacr,
            unita_organizzativa.cd_area_ricerca,
            unita_organizzativa.fl_presidente_area,
            unita_organizzativa.cd_responsabile,
            unita_organizzativa.utcr,
            unita_organizzativa.duva,
            unita_organizzativa.cd_responsabile_amm,
            unita_organizzativa.utuv,
            unita_organizzativa.pg_ver_rec,
            unita_organizzativa.esercizio_fine,
            unita_organizzativa.cd_area_scientifica,
            unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa_valida unita_organizzativa,
            v_unita_organizzativa_valida uo_rubrica,
            v_cdr_valido cdr,
            v_cdr_valido cdr_rubrica
            WHERE ((uo_rubrica.esercizio = unita_organizzativa.esercizio) AND (cdr.esercizio = unita_organizzativa.esercizio) AND (cdr_rubrica.esercizio = unita_organizzativa.esercizio) AND (uo_rubrica.fl_rubrica = 'Y'::bpchar) AND ((unita_organizzativa.cd_tipo_unita)::text = 'SAC'::text) AND ((uo_rubrica.cd_tipo_unita)::text = 'SAC'::text) AND ((unita_organizzativa.cd_unita_padre)::text = (uo_rubrica.cd_unita_padre)::text) AND ((cdr.cd_unita_organizzativa)::text = (unita_organizzativa.cd_unita_organizzativa)::text) AND ((cdr_rubrica.cd_unita_organizzativa)::text = (uo_rubrica.cd_unita_organizzativa)::text) AND ((((unita_organizzativa.cd_unita_organizzativa)::text &lt;&gt; (uo_rubrica.cd_unita_organizzativa)::text) AND ((cdr.cd_cdr_afferenza)::text = (cdr_rubrica.cd_centro_responsabilita)::text)) OR ((unita_organizzativa.cd_unita_organizzativa)::text = (uo_rubrica.cd_unita_organizzativa)::text)))
            UNION ALL
            SELECT unita_organizzativa.cd_unita_organizzativa AS cd_uo,
            unita_organizzativa.esercizio,
            unita_organizzativa.esercizio_inizio,
            unita_organizzativa.cd_unita_organizzativa,
            unita_organizzativa.cd_proprio_unita,
            unita_organizzativa.cd_tipo_unita,
            unita_organizzativa.fl_cds,
            unita_organizzativa.fl_uo_cds,
            unita_organizzativa.fl_rubrica,
            unita_organizzativa.cd_unita_padre,
            unita_organizzativa.livello,
            unita_organizzativa.ds_unita_organizzativa,
            unita_organizzativa.prc_copertura_obblig_2,
            unita_organizzativa.prc_copertura_obblig_3,
            unita_organizzativa.dacr,
            unita_organizzativa.cd_area_ricerca,
            unita_organizzativa.fl_presidente_area,
            unita_organizzativa.cd_responsabile,
            unita_organizzativa.utcr,
            unita_organizzativa.duva,
            unita_organizzativa.cd_responsabile_amm,
            unita_organizzativa.utuv,
            unita_organizzativa.pg_ver_rec,
            unita_organizzativa.esercizio_fine,
            unita_organizzativa.cd_area_scientifica,
            unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa_valida unita_organizzativa
            WHERE ((unita_organizzativa.fl_rubrica = 'N'::bpchar) AND ((unita_organizzativa.cd_tipo_unita)::text = 'SAC'::text));</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_utente_unita_organizzativa">
        <createView fullDefinition="false" viewName="v_utente_unita_organizzativa"> SELECT utente.cd_utente,
            v_unita_organizzativa.esercizio,
            v_unita_organizzativa.esercizio_inizio,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.cd_proprio_unita,
            v_unita_organizzativa.cd_tipo_unita,
            v_unita_organizzativa.fl_cds,
            v_unita_organizzativa.fl_uo_cds,
            v_unita_organizzativa.fl_rubrica,
            v_unita_organizzativa.cd_unita_padre,
            v_unita_organizzativa.livello,
            v_unita_organizzativa.ds_unita_organizzativa,
            v_unita_organizzativa.prc_copertura_obblig_2,
            v_unita_organizzativa.prc_copertura_obblig_3,
            v_unita_organizzativa.dacr,
            v_unita_organizzativa.cd_area_ricerca,
            v_unita_organizzativa.fl_presidente_area,
            v_unita_organizzativa.cd_responsabile,
            v_unita_organizzativa.utcr,
            v_unita_organizzativa.duva,
            v_unita_organizzativa.cd_responsabile_amm,
            v_unita_organizzativa.utuv,
            v_unita_organizzativa.pg_ver_rec,
            v_unita_organizzativa.esercizio_fine,
            v_unita_organizzativa.cd_area_scientifica,
            v_unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa,
            utente,
            configurazione_cnr
            WHERE ((configurazione_cnr.esercizio = 0) AND ((configurazione_cnr.cd_unita_funzionale)::text = '*'::text) AND ((configurazione_cnr.cd_chiave_primaria)::text = 'ESERCIZIO_SPECIALE'::text) AND ((configurazione_cnr.cd_chiave_secondaria)::text = 'ESERCIZIO_PARTENZA'::text) AND ((v_unita_organizzativa.esercizio)::numeric &gt;= configurazione_cnr.im01) AND ((EXISTS ( SELECT 1
            FROM utente_unita_accesso
            WHERE (((utente_unita_accesso.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((utente_unita_accesso.cd_utente)::text = (utente.cd_utente)::text)))) OR (EXISTS ( SELECT 1
            FROM utente_unita_ruolo a
            WHERE (((a.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((a.cd_utente)::text = (utente.cd_utente)::text))))))
            UNION
            SELECT utente.cd_utente,
            v_unita_organizzativa.esercizio,
            v_unita_organizzativa.esercizio_inizio,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.cd_proprio_unita,
            v_unita_organizzativa.cd_tipo_unita,
            v_unita_organizzativa.fl_cds,
            v_unita_organizzativa.fl_uo_cds,
            v_unita_organizzativa.fl_rubrica,
            v_unita_organizzativa.cd_unita_padre,
            v_unita_organizzativa.livello,
            v_unita_organizzativa.ds_unita_organizzativa,
            v_unita_organizzativa.prc_copertura_obblig_2,
            v_unita_organizzativa.prc_copertura_obblig_3,
            v_unita_organizzativa.dacr,
            v_unita_organizzativa.cd_area_ricerca,
            v_unita_organizzativa.fl_presidente_area,
            v_unita_organizzativa.cd_responsabile,
            v_unita_organizzativa.utcr,
            v_unita_organizzativa.duva,
            v_unita_organizzativa.cd_responsabile_amm,
            v_unita_organizzativa.utuv,
            v_unita_organizzativa.pg_ver_rec,
            v_unita_organizzativa.esercizio_fine,
            v_unita_organizzativa.cd_area_scientifica,
            v_unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa,
            utente utente_templ,
            utente,
            configurazione_cnr
            WHERE ((configurazione_cnr.esercizio = 0) AND ((configurazione_cnr.cd_unita_funzionale)::text = '*'::text) AND ((configurazione_cnr.cd_chiave_primaria)::text = 'ESERCIZIO_SPECIALE'::text) AND ((configurazione_cnr.cd_chiave_secondaria)::text = 'ESERCIZIO_PARTENZA'::text) AND ((v_unita_organizzativa.esercizio)::numeric &gt;= configurazione_cnr.im01) AND ((utente_templ.cd_utente)::text = (utente.cd_utente_templ)::text) AND ((EXISTS ( SELECT 1
            FROM utente_unita_accesso
            WHERE (((utente_unita_accesso.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((utente_unita_accesso.cd_utente)::text = (utente_templ.cd_utente)::text)))) OR (EXISTS ( SELECT 1
            FROM utente_unita_ruolo a
            WHERE (((a.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((a.cd_utente)::text = (utente_templ.cd_utente)::text))))))
            UNION
            SELECT utente.cd_utente,
            v_unita_organizzativa.esercizio,
            v_unita_organizzativa.esercizio_inizio,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.cd_proprio_unita,
            v_unita_organizzativa.cd_tipo_unita,
            v_unita_organizzativa.fl_cds,
            v_unita_organizzativa.fl_uo_cds,
            v_unita_organizzativa.fl_rubrica,
            v_unita_organizzativa.cd_unita_padre,
            v_unita_organizzativa.livello,
            v_unita_organizzativa.ds_unita_organizzativa,
            v_unita_organizzativa.prc_copertura_obblig_2,
            v_unita_organizzativa.prc_copertura_obblig_3,
            v_unita_organizzativa.dacr,
            v_unita_organizzativa.cd_area_ricerca,
            v_unita_organizzativa.fl_presidente_area,
            v_unita_organizzativa.cd_responsabile,
            v_unita_organizzativa.utcr,
            v_unita_organizzativa.duva,
            v_unita_organizzativa.cd_responsabile_amm,
            v_unita_organizzativa.utuv,
            v_unita_organizzativa.pg_ver_rec,
            v_unita_organizzativa.esercizio_fine,
            v_unita_organizzativa.cd_area_scientifica,
            v_unita_organizzativa.id_funzione_pubblica
            FROM v_unita_organizzativa,
            utente,
            configurazione_cnr
            WHERE ((configurazione_cnr.esercizio = 0) AND ((configurazione_cnr.cd_unita_funzionale)::text = '*'::text) AND ((configurazione_cnr.cd_chiave_primaria)::text = 'ESERCIZIO_SPECIALE'::text) AND ((configurazione_cnr.cd_chiave_secondaria)::text = 'ESERCIZIO_PARTENZA'::text) AND ((v_unita_organizzativa.esercizio)::numeric &gt;= configurazione_cnr.im01) AND (utente.fl_supervisore = 'Y'::bpchar) AND (EXISTS ( SELECT 1
            FROM ruolo_accesso,
            ruolo,
            ass_tipo_ruolo_privilegio
            WHERE (((ruolo_accesso.cd_ruolo)::text = (ruolo.cd_ruolo)::text) AND ((ruolo.tipo)::text = (ass_tipo_ruolo_privilegio.tipo)::text) AND ((ass_tipo_ruolo_privilegio.cd_privilegio)::text = 'SUPVIS'::text)))));</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_albero_main_unita_utente">
        <createView fullDefinition="false" viewName="v_albero_main_unita_utente"> SELECT v_unita_organizzativa.esercizio,
            utente.cd_utente,
            v_unita_organizzativa.cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            ass_bp_accesso.ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM ass_bp_accesso,
            albero_main,
            utente,
            v_unita_organizzativa
            WHERE (((ass_bp_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((ass_bp_accesso.business_process)::text = (albero_main.business_process)::text) AND ((COALESCE((ass_bp_accesso.esercizio_inizio_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &gt;= ass_bp_accesso.esercizio_inizio_validita)) AND ((COALESCE((ass_bp_accesso.esercizio_fine_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &lt;= ass_bp_accesso.esercizio_fine_validita)) AND (EXISTS ( SELECT 1
            FROM utente_unita_accesso
            WHERE (((utente_unita_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((utente_unita_accesso.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((utente_unita_accesso.cd_utente)::text = ANY ((ARRAY[utente.cd_utente, utente.cd_utente_templ])::text[]))))))
            UNION
            SELECT 0 AS esercizio,
            utente.cd_utente,
            '*'::character varying AS cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            ass_bp_accesso.ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM ass_bp_accesso,
            albero_main,
            utente
            WHERE (((ass_bp_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((ass_bp_accesso.business_process)::text = (albero_main.business_process)::text) AND (EXISTS ( SELECT 1
            FROM utente_unita_accesso
            WHERE (((utente_unita_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((utente_unita_accesso.cd_unita_organizzativa)::text = '*'::text) AND ((utente_unita_accesso.cd_utente)::text = (utente.cd_utente)::text)))))
            UNION
            SELECT v_unita_organizzativa.esercizio,
            utente.cd_utente,
            v_unita_organizzativa.cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            ass_bp_accesso.ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM ass_bp_accesso,
            albero_main,
            utente,
            v_unita_organizzativa
            WHERE (((ass_bp_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((ass_bp_accesso.business_process)::text = (albero_main.business_process)::text) AND ((COALESCE((ass_bp_accesso.esercizio_inizio_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &gt;= ass_bp_accesso.esercizio_inizio_validita)) AND ((COALESCE((ass_bp_accesso.esercizio_fine_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &lt;= ass_bp_accesso.esercizio_fine_validita)) AND (EXISTS ( SELECT 1
            FROM utente_unita_ruolo a
            WHERE (((a.cd_unita_organizzativa)::text = (v_unita_organizzativa.cd_uo)::text) AND ((a.cd_utente)::text = ANY ((ARRAY[utente.cd_utente, utente.cd_utente_templ])::text[])) AND (EXISTS ( SELECT 1
            FROM ruolo_accesso
            WHERE (((ruolo_accesso.cd_ruolo)::text = (a.cd_ruolo)::text) AND ((ruolo_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text))))))))
            UNION
            SELECT v_unita_organizzativa.esercizio,
            utente.cd_utente,
            v_unita_organizzativa.cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            ass_bp_accesso.ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM ass_bp_accesso,
            albero_main,
            utente,
            v_unita_organizzativa
            WHERE (((ass_bp_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text) AND ((ass_bp_accesso.business_process)::text = (albero_main.business_process)::text) AND ((COALESCE((ass_bp_accesso.esercizio_inizio_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &gt;= ass_bp_accesso.esercizio_inizio_validita)) AND ((COALESCE((ass_bp_accesso.esercizio_fine_validita)::text, ''::text) = ''::text) OR (v_unita_organizzativa.esercizio &lt;= ass_bp_accesso.esercizio_fine_validita)) AND (utente.fl_supervisore = 'Y'::bpchar) AND (EXISTS ( SELECT 1
            FROM ruolo_accesso,
            ruolo,
            ass_tipo_ruolo_privilegio
            WHERE (((ruolo_accesso.cd_ruolo)::text = (ruolo.cd_ruolo)::text) AND ((ruolo.tipo)::text = (ass_tipo_ruolo_privilegio.tipo)::text) AND ((ass_tipo_ruolo_privilegio.cd_privilegio)::text = 'SUPVIS'::text) AND ((ruolo_accesso.cd_ruolo)::text = (utente.cd_ruolo_supervisore)::text) AND ((ruolo_accesso.cd_accesso)::text = (albero_main.cd_accesso)::text)))))
            UNION
            SELECT esercizio_base.esercizio,
            utente.cd_utente,
            unita_organizzativa.cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            NULL::bpchar AS ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM albero_main,
            utente,
            unita_organizzativa,
            esercizio_base
            WHERE (albero_main.fl_terminale = 'N'::bpchar)
            UNION
            SELECT 0 AS esercizio,
            utente.cd_utente,
            '*'::character varying AS cd_unita_organizzativa,
            albero_main.cd_nodo,
            albero_main.cd_nodo_padre,
            albero_main.cd_accesso,
            albero_main.cd_proprio_nodo,
            albero_main.ds_nodo,
            NULL::bpchar AS ti_funzione,
            albero_main.fl_terminale,
            albero_main.business_process,
            albero_main.url_icona,
            albero_main.url_icona_open,
            albero_main.pg_ordinamento,
            albero_main.livello,
            albero_main.dacr,
            albero_main.utcr,
            albero_main.duva,
            albero_main.utuv,
            albero_main.pg_ver_rec
            FROM utente,
            albero_main
            WHERE (albero_main.fl_terminale = 'N'::bpchar);</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_terzo_cf_pi">
        <createView fullDefinition="false" viewName="v_terzo_cf_pi"> SELECT t.cd_terzo,
            t.frazione_sede,
            t.cd_anag,
            t.dt_fine_rapporto,
            t.ti_terzo,
            t.cd_precedente,
            t.denominazione_sede,
            t.via_sede,
            t.numero_civico_sede,
            t.pg_comune_sede,
            t.cap_comune_sede,
            t.pg_rapp_legale,
            t.cd_unita_organizzativa,
            t.nome_unita_organizzativa,
            t.note,
            t.dt_canc,
            t.dacr,
            t.utcr,
            t.duva,
            t.utuv,
            t.pg_ver_rec,
            a.codice_fiscale AS codice_fiscale_anagrafico,
            a.partita_iva AS partita_iva_anagrafico,
            t.codice_univoco_ufficio_ipa,
            t.codice_univoco_pcc,
            t.denominazione_pcc
            FROM terzo t,
            anagrafico a
            WHERE (t.cd_anag = a.cd_anag);</createView>
    </changeSet>
    <changeSet dbms="h2, postgresql" author="sigla" id="createView-v_utente_accesso">
        <createView fullDefinition="false" viewName="v_utente_accesso"> SELECT utente_unita_accesso.cd_utente,
            utente_unita_accesso.cd_accesso,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.esercizio,
            'UTENTE_UNITA_ACCESSO'::text AS origine
            FROM utente_unita_accesso,
            v_unita_organizzativa
            WHERE ((v_unita_organizzativa.cd_uo)::text = (utente_unita_accesso.cd_unita_organizzativa)::text)
            UNION ALL
            SELECT utente_unita_ruolo.cd_utente,
            ruolo_accesso.cd_accesso,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.esercizio,
            'RUOLO_ACCESSO'::text AS origine
            FROM utente_unita_ruolo,
            ruolo_accesso,
            ruolo,
            v_unita_organizzativa
            WHERE (((ruolo_accesso.cd_ruolo)::text = (ruolo.cd_ruolo)::text) AND ((ruolo.cd_ruolo)::text = (utente_unita_ruolo.cd_ruolo)::text) AND ((v_unita_organizzativa.cd_unita_organizzativa)::text = (utente_unita_ruolo.cd_unita_organizzativa)::text))
            UNION ALL
            SELECT utente.cd_utente,
            utente_unita_accesso.cd_accesso,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.esercizio,
            'UTENTE_TEMPL_UNITA_ACCESSO'::text AS origine
            FROM utente_unita_accesso,
            utente,
            v_unita_organizzativa
            WHERE (((utente_unita_accesso.cd_utente)::text = (utente.cd_utente_templ)::text) AND ((v_unita_organizzativa.cd_uo)::text = (utente_unita_accesso.cd_unita_organizzativa)::text))
            UNION ALL
            SELECT utente.cd_utente,
            ruolo_accesso.cd_accesso,
            v_unita_organizzativa.cd_unita_organizzativa,
            v_unita_organizzativa.esercizio,
            'RUOLO_TEMPL_ACCESSO'::text AS origine
            FROM utente_unita_ruolo,
            ruolo_accesso,
            ruolo,
            utente,
            v_unita_organizzativa
            WHERE (((ruolo.cd_ruolo)::text = (utente_unita_ruolo.cd_ruolo)::text) AND ((ruolo_accesso.cd_ruolo)::text = (ruolo.cd_ruolo)::text) AND ((utente_unita_ruolo.cd_utente)::text = (utente.cd_utente_templ)::text) AND ((v_unita_organizzativa.cd_uo)::text = (utente_unita_ruolo.cd_unita_organizzativa)::text))
            UNION ALL
            SELECT utente_unita_accesso.cd_utente,
            utente_unita_accesso.cd_accesso,
            '*'::character varying AS cd_unita_organizzativa,
            0 AS esercizio,
            'UTENTE_*_ACCESSO'::text AS origine
            FROM utente_unita_accesso
            WHERE ((utente_unita_accesso.cd_unita_organizzativa)::text = '*'::text);</createView>
    </changeSet>
</databaseChangeLog>