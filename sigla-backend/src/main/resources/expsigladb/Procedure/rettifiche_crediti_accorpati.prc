CREATE OR REPLACE PROCEDURE rettifiche_CREDITI_ACCORPATI (aes in number, INCDS IN VARCHAR) is
NUMERO NUMBER;

BEGIN

FOR SALDI In (SELECT  M.CD_CDS, M.CD_UNITA_ORGANIZZATIVA, M.CD_TERZO, M.CD_VOCE_EP, m.ti_istituz_commerc,
         NVL(sum(DECODE(M.SEZIONE, 'D', m.im_movimento)), 0) DARE,
         NVL(sum(DECODE(M.SEZIONE, 'A', m.im_movimento)), 0) AVERE,
         NVL(sum(DECODE(M.SEZIONE, 'D', m.im_movimento)), 0) - NVL(sum(DECODE(M.SEZIONE, 'A', m.im_movimento)), 0) SALDO_DARE
 FROM    movimento_coge m, scrittura_partita_doppia t
 WHERE   M.CD_CDS = INCDS AND
         t.CD_CDS                  = m.CD_CDS                  and
         t.ESERCIZIO               = m.ESERCIZIO               and
         t.CD_UNITA_ORGANIZZATIVA  = m.CD_UNITA_ORGANIZZATIVA  and
         t.PG_SCRITTURA            = m.PG_SCRITTURA            AND
         t.attiva = 'Y' AND
         M.CD_VOCE_EP = 'A.06.005' AND
        (CD_TIPO_DOCUMENTO, ESERCIZIO_DOCUMENTO_AMM, CD_CDS_DOCUMENTO, CD_UO_DOCUMENTO, PG_NUMERO_DOCUMENTO) IN
        (SELECT CD_TIPO_DOCUMENTO_AMM, ESERCIZIO, CD_CDS, CD_UNITA_ORGANIZZATIVA, PG_DOCUMENTO_AMM
         FROM V_DOC_AMM_ACC
         WHERE  cd_cds_ACCERTAMENTO = '999' AND
         ESERCIZIO_accertamento = 2006 and
         ESERCIZIO_ori_ACCERTAMENTO < 2006 AND
         CD_CDS_ORIGINE = INCDS and
         stato_coge = 'C')
  GROUP BY M.CD_CDS, M.CD_UNITA_ORGANIZZATIVA, M.CD_TERZO, M.CD_VOCE_EP, m.ti_istituz_commerc) LOOP

NUMERO := CNRCTB200.getNextProgressivo(aes, SALDI.CD_Cds, SALDI.Cd_Unita_Organizzativa, 'COGE',
          'RETT_CRED_ACCORP', TRUNC(SYSDATE));

INSERT INTO SCRITTURA_PARTITA_DOPPIA
(CD_CDS, ESERCIZIO, CD_UNITA_ORGANIZZATIVA , PG_SCRITTURA, ORIGINE_SCRITTURA, CD_TERZO,
IM_SCRITTURA, TI_SCRITTURA, DT_CONTABILIZZAZIONE, STATO, DS_SCRITTURA, ATTIVA,
DACR, UTCR, DUVA, UTUV, PG_VER_REC, CD_CDS_DOCUMENTO, CD_UO_DOCUMENTO)
VALUES
(SALDI.CD_CDS, 2008, SALDI.CD_UNITA_ORGANIZZATIVA, NUMERO,
'CAUSALE', SALDI.CD_TERZO, ABS(SALDI.SALDO_DARE), 'P', TO_DATE('01/01/2008', 'DD/MM/YYYY'),
'D', 'Rettifica CREDITI 2006 Enti Accorpati Terzo '||TO_CHAR(SALDI.CD_TERZO),
'Y', TRUNC(SYSDATE), 'RETT_CRED_ACCORP', TRUNC(SYSDATE), 'RETT_CRED_ACCORP', 1, SALDI.CD_CDS, SALDI.CD_UNITA_ORGANIZZATIVA);

IF SALDI.SALDO_DARE > 0 THEN

        -- RIDURRE CREDITO

        INSERT INTO MOVIMENTO_COGE
        (CD_CDS, ESERCIZIO, CD_UNITA_ORGANIZZATIVA, PG_SCRITTURA, PG_MOVIMENTO, CD_TERZO, CD_VOCE_EP,
        IM_MOVIMENTO, SEZIONE, DT_DA_COMPETENZA_COGE, DT_A_COMPETENZA_COGE, STATO,
        DACR, UTCR, DUVA, UTUV, PG_VER_REC, TI_ISTITUZ_COMMERC)
        VALUES
        (SALDI.CD_CDS, '2008', SALDI.CD_UNITA_ORGANIZZATIVA, NUMERO , 1, SALDI.CD_TERZO, SALDI.CD_VOCE_EP,
        ABS(SALDI.SALDO_DARE), 'A', TO_DATE('01/01/2008', 'DD/MM/YYYY'), TO_DATE('01/01/2008', 'DD/MM/YYYY'),
        'D', TRUNC(SYSDATE), 'RETT_CRED_ACCORP', TRUNC(SYSDATE), 'RETT_CRED_ACCORP', 1, saldi.ti_istituz_commerc);

        -- A PATRIMONIO INIZIALE (N.01.001)

        INSERT INTO MOVIMENTO_COGE
        (CD_CDS, ESERCIZIO, CD_UNITA_ORGANIZZATIVA, PG_SCRITTURA, PG_MOVIMENTO, CD_TERZO, CD_VOCE_EP,
        IM_MOVIMENTO, SEZIONE, DT_DA_COMPETENZA_COGE, DT_A_COMPETENZA_COGE, STATO,
        DACR, UTCR, DUVA, UTUV, PG_VER_REC, TI_ISTITUZ_COMMERC)
        VALUES
        (SALDI.CD_CDS, 2008, SALDI.CD_UNITA_ORGANIZZATIVA, NUMERO , 2, SALDI.CD_TERZO, 'N.01.001',
        ABS(SALDI.SALDO_DARE), 'D', TO_DATE('01/01/2008', 'DD/MM/YYYY'), TO_DATE('01/01/2008', 'DD/MM/YYYY'), 'D',
        TRUNC(SYSDATE), 'RETT_CRED_ACCORP', TRUNC(SYSDATE), 'RETT_CRED_ACCORP', 1, saldi.ti_istituz_commerc);

ELSIF SALDI.SALDO_DARE < 0 THEN
NULL;
/*
        -- NUOVO MINOR DEBITO IN DARE

        INSERT INTO MOVIMENTO_COGE
        (CD_CDS, ESERCIZIO, CD_UNITA_ORGANIZZATIVA, PG_SCRITTURA, PG_MOVIMENTO, CD_TERZO, CD_VOCE_EP,
        IM_MOVIMENTO, SEZIONE, DT_DA_COMPETENZA_COGE, DT_A_COMPETENZA_COGE, STATO,
        DACR, UTCR, DUVA, UTUV, PG_VER_REC, TI_ISTITUZ_COMMERC)
        VALUES
        (SALDI.CD_CDS, aes, SALDI.CD_UNITA_ORGANIZZATIVA, NUMERO , 1, SALDI.CD_TERZO, SALDI.CD_VOCE_EP,
        ABS(SALDI.SALDO), 'D', TO_DATE('01/01/2004', 'DD/MM/YYYY'), TO_DATE('01/01/2004', 'DD/MM/YYYY'),
        'D', TRUNC(SYSDATE), 'RET_DEBITI', TRUNC(SYSDATE), 'RET_DEBITI', 1, saldi.ti_istituz_commerc);

        -- ATTUALE MINOR DEBITO (SPORCO) DARE 2003 DA CHIUDERE IN AVERE

        INSERT INTO MOVIMENTO_COGE
        (CD_CDS, ESERCIZIO, CD_UNITA_ORGANIZZATIVA, PG_SCRITTURA, PG_MOVIMENTO, CD_TERZO, CD_VOCE_EP,
        IM_MOVIMENTO, SEZIONE, DT_DA_COMPETENZA_COGE, DT_A_COMPETENZA_COGE, STATO,
        DACR, UTCR, DUVA, UTUV, PG_VER_REC, TI_ISTITUZ_COMMERC)
        VALUES
        (SALDI.CD_CDS, aes, SALDI.CD_UNITA_ORGANIZZATIVA, NUMERO , 2, SALDI.CD_TERZO, SALDI.CD_VOCE_EP,
        ABS(SALDI.SALDO), 'A', TO_DATE('31/12/2003', 'DD/MM/YYYY'), TO_DATE('31/12/2003', 'DD/MM/YYYY'),
        'D', TRUNC(SYSDATE), 'RET_DEBITI', TRUNC(SYSDATE), 'RET_DEBITI', 1, saldi.ti_istituz_commerc);
*/
END IF;

end loop;

--commit;

END;
/


